{"version":3,"sources":["firebaseConfig.js","AuthContext.js","components/Login.js","components/Challenge.js","components/Score.js","components/Leaderboard.js","components/Register.js","components/ProtectedRoute.js","components/EnterNamePage.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getAuth","AuthContext","getFirestore","createContext","useAuth","useContext","AuthProvider","_ref","children","userId","setUserId","useState","username","setUsername","React","createElement","Provider","value","updateUserId","id","updateUsername","name","Login","login","setLogin","history","useNavigate","className","src","onClick","onSubmit","e","handleSubmit","type","preventDefault","email","target","password","createUserWithEmailAndPassword","then","data","user","uid","console","log","catch","err","alert","signInWithEmailAndPassword","placeholder","required","Challenge","images","setImages","currentIndex","setCurrentIndex","score","setScore","feedback","setFeedback","gameOver","setGameOver","navigate","useEffect","fetch","response","json","shuffledData","array","i","length","j","Math","floor","random","shuffleArray","error","axios","post","handleGuess","guess","origin","prevScore","setTimeout","prevIndex","style","display","justifyContent","alignItems","background","padding","color","fontWeight","fontSize","NavLink","to","isActive","_ref2","_ref3","handleClick","signOut","textAlign","url","alt","height","Score","get","concat","class","getScoreMessage","Leaderboard","people","setPeople","async","sortedPeople","sort","a","b","fetchData","map","person","index","key","Register","formData","setFormData","handleChange","event","withCredentials","onChange","ProtectedRoute","component","Component","rest","isAuthenticated","setIsAuthenticated","auth","unsubscribe","onAuthStateChanged","Navigate","EnterNamePage","setName","handleNameSubmit","trim","App","BrowserRouter","basename","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.18812b0b.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAhJJaVK1FaPsXKJzaoD014LqmH7esjBQM\",\n  authDomain: \"authentiquest.firebaseapp.com\",\n  projectId: \"authentiquest\",\n  storageBucket: \"authentiquest.appspot.com\",\n  messagingSenderId: \"448490934032\",\n  appId: \"1:448490934032:web:44ede1643b54051c91df95\",\n  measurementId: \"G-V1SZHVH1L6\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const database = getAuth(app);\nexport const db = getFirestore();","import React, { createContext, useState, useContext } from 'react';\n\n\nexport const AuthContext = createContext();\n\n\nexport const useAuth = () => useContext(AuthContext);\n\n\nexport const AuthProvider = ({ children }) => {\n  const [userId, setUserId] = useState(null);\n  const [username, setUsername] = useState(null);\n\n  \n  const updateUserId = (id) => {\n    setUserId(id);\n  };\n\n  \n  const updateUsername = (name) => {\n    setUsername(name);\n  };\n\n  return (\n    <AuthContext.Provider value={{ userId, username, updateUserId, updateUsername }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { database } from \"../firebaseConfig\";\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\nfunction Login() {\n  const [login, setLogin] = useState(false);\n  const navigate = useNavigate(); \n  const history = useNavigate();\n  const { updateUserId } = useAuth();\n  const handleSubmit = (e, type) => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    if (type === 'Sign Up'){\n    createUserWithEmailAndPassword(database, email, password)\n      .then(data => {updateUserId(data.user.uid);\n        console.log(data, \"authData\");\n        history('/enternamepage'); \n      }).catch(err => alert(err));\n    } else {\n      signInWithEmailAndPassword(database, email, password)\n      .then(data => {\n        updateUserId(data.user.uid);\n        console.log(data, \"authData\");\n        history('/enternamepage'); \n      }). catch(err => {alert(err); setLogin(true)});\n  };\n  }\n  return (\n    <div className=\"page-container\">\n    <div className=\"form-container\">\n        <img src=\"https://i.ibb.co/bX9ZXjp/a-2.png\" className=\"logo\"/>\n        <div className=\"row\"> <div className='col-md-6'><h2 className= {login == false? 'activeColor title' :'pointer title'} onClick={() => setLogin(false)}>Sign Up</h2></div> <div className='col-md-6'>        <h2 className= {login == true? 'activeColor title' :'pointer title'} onClick={() => setLogin(true)}>Sign In</h2></div>\n        </div>\n        <form onSubmit={(e) =>handleSubmit(e, login?'Sign In':'Sign Up')}>\n            <div className=\"input-container\">\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"input-field\" required/>\n            </div>\n            \n            <div className=\"input-container\">\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"input-field\" required/>\n            </div>\n            \n            <div className=\"login-button-container\">\n                <button type=\"submit\" className=\"login-button\">{login?'Sign In':'Sign Up'}</button>\n            </div>\n        </form>\n    </div>\n</div>\n  );\n}\n\nexport default Login;\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { signOut } from 'firebase/auth';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport { database } from '../firebaseConfig';\nimport { useAuth } from '../AuthContext';\n\nfunction Challenge() {\n    const [images, setImages] = useState([]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [score, setScore] = useState(0);\n    const [feedback, setFeedback] = useState('');\n    const [gameOver, setGameOver] = useState(false);\n    const navigate = useNavigate();\n    const { userId, username } = useAuth();\n  \n    useEffect(() => {\n        fetch('http://localhost:3001/images')\n            .then(response => response.json())\n            .then(data => {\n                const shuffledData = shuffleArray(data);\n                setImages(shuffledData);\n            })\n            .catch(err => console.error('Error fetching images:', err));\n    }, []);\n    \n\n    useEffect(() => {\n        if (gameOver) {\n            console.log(\"Game over detected, attempting to save score...\");\n            axios.post('http://localhost:3001/api/score', { userId, username, score })\n                .then(() => {\n                    console.log(\"Score saved successfully\");\n                    navigate('/score'); // Redirect to score page\n                })\n                .catch(error => console.error(\"Failed to save score:\", error));\n        }\n    }, [gameOver, userId, username, score, navigate]);\n\n    const handleGuess = (guess) => {\n        if (!gameOver && images.length > 0) {\n            const correctAnswer = images[currentIndex].origin;\n            if (guess === correctAnswer) {\n                setFeedback('Correct!');\n                setScore((prevScore) => prevScore + 1);\n            } else {\n                setFeedback('Incorrect. Try again!');\n            }\n            setTimeout(() => {\n                if (currentIndex < images.length - 1) {\n                    setCurrentIndex((prevIndex) => prevIndex + 1);\n                    setFeedback('');\n                } else {\n                    console.log(\"Setting game over to true...\"); \n                    setGameOver(true);\n                }\n            }, 100);\n        }\n    };\n\n    const handleClick = () => {\n        signOut(database).then(() => navigate('/'));\n    };\n\n    function shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]]; \n        }\n        return array;\n    }\n\n    return (\n        <div>\n            {/* Navigation and other JSX remain the same */}\n            <nav style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', background: '#000000', padding: '0.5rem 1rem' }}>\n              <div style={{ color: 'white', fontWeight: 'bold', fontSize: '24px' }} className='wrapper'>\n                AuthentiQuest\n              </div>\n              <div className='wrapper'>\n                {/* <NavLink to=\"/\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Login</NavLink> */}\n                <NavLink to=\"/challenge\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Challenge</NavLink>\n                <NavLink to=\"/score\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Score</NavLink>\n                <NavLink to=\"/leaderboard\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Leaderboard</NavLink>\n                <button onClick={handleClick} className='logoutb'>Sign out</button>\n              </div>\n            </nav>\n            {/* Game content and feedback */}\n            <p className='padded lead-p mt-4'>Score: {score}</p>\n            <p className='text-center lead white mt-4'>There's 50 of these, how many can you get?</p>\n            {!gameOver ? (\n                images.length > 0 ? (\n                    <div style={{ textAlign: 'center', padding: 10 }}>\n                        <img \n                            src={images[currentIndex].url} \n                            alt=\"Gallery\" \n                            style={{ height: '60vh' }}\n                        />\n                        <div className='mt-4'>\n                            <button className= 'choice-btn regular' onClick={() => handleGuess('human')}>Real Image</button>\n                            <button className = 'choice-btn danger' onClick={() => handleGuess('ai')}>AI Generated</button>\n                        </div>\n                        <h4 className='white currently-answered mt-3'>{currentIndex}/50 Answered</h4>\n                    </div>\n                ) : (\n                    <p className='padded danger'>Loading images...</p>\n                )\n            ) : (\n                <p></p>\n            )}\n        </div>\n    );\n}\n\nexport default Challenge;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\nimport { signOut } from 'firebase/auth';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport { database } from '../firebaseConfig';\n\nconst Score = () => {\n  const [score, setScore] = useState(null);\n  const { userId, username } = useAuth();\n  const navigate = useNavigate();\n  const handleClick = () => {\n    signOut(database).then(() => navigate('/'));\n};\nconst getScoreMessage = score => {\n  if (score < 5) return \"I've never seen worse\";\n  else if (score < 10) return \"Clearly AI can do better than you.\";\n  else if (score < 15) return \"Got a long way to go.\";\n  else if (score < 20) return \"AI is winning!\";\n  else if (score < 25) return \"AI is caught up \";\n  else if (score < 30) return \"At least about average!\";\n  else if (score < 35) return \"Keep trying, human!\";\n  else if (score < 40) return \"Not bad!\";\n  else if (score < 45) return \"AI has nothing on you!\";\n  else if (score < 50) return \"Nearly perfect!\";\n  else return \"You are humanity's hope!\";\n};\n  useEffect(() => {\n    axios.get(`http://localhost:3001/api/score/${userId}`)\n        .then(response => {\n           \n            setScore(response.data.score);\n        })\n        .catch(error => {\n            console.error('Failed to fetch score:', error);\n        });\n}, [userId]);\n\n    return (\n        <div>\n          <nav style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', background: '#000000', padding: '0.5rem 1rem' }}>\n          <div style={{ color: 'white', fontWeight: 'bold', fontSize: '24px' }} className='wrapper'>\n            AuthentiQuest\n          </div>\n          <div className='wrapper'>\n            <NavLink to=\"/challenge\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Challenge</NavLink>\n            <NavLink to=\"/score\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Score</NavLink>\n            <NavLink to=\"/leaderboard\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Leaderboard</NavLink>\n            <button onClick={handleClick} className='logoutb'>Sign out</button>\n          </div>\n        </nav>\n            <div class=\"score-container\">\n        <div class=\"score-box\">\n            <div class=\"score-title\">Your score</div>\n            <div class=\"score-button\">\n                <span class=\"score-value text-center\">{score !== null ? score : \"...\"}</span>\n                <p className=\"score-message lead white text-center mb-4\">{username}, {score !== null ? getScoreMessage(score) : \"Computing your fate\"}</p>\n            </div>\n            \n        </div>\n        <p className='lead white mt-4'>Checkout the leaderboard to see how others did</p>\n    </div>\n        </div>\n    );\n};\n\nexport default Score;","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { signOut } from 'firebase/auth';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    NavLink\n} from 'react-router-dom';\nimport { database } from '../firebaseConfig';\nconst Leaderboard = () => {\n    const navigate = useNavigate();\n    const [people, setPeople] = useState([]);\n    const handleClick = () => {\n      signOut(database).then(() => navigate('/'));\n  };\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/people');\n                console.log('People data:', response.data);\n                const sortedPeople = response.data.sort((a, b) => b.score - a.score);\n                setPeople(sortedPeople);\n            } catch (error) {\n                console.error('Failed to fetch people data:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <nav style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', background: '#000000', padding: '0.5rem 1rem' }}>\n                <div style={{ color: 'white', fontWeight: 'bold', fontSize: '24px' }} className='wrapper'>\n                    AuthentiQuest\n                </div>\n                <div className='wrapper'>\n                    <NavLink to=\"/challenge\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Challenge</NavLink>\n                    <NavLink to=\"/score\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Score</NavLink>\n                    <NavLink to=\"/leaderboard\" className={({ isActive }) => (isActive ? \"active-link\" : \"link\")}>Leaderboard</NavLink>\n                    <button onClick={handleClick} className='logoutb'>Sign out</button>\n                </div>\n            </nav>\n            <div className=\"leaderboard-container\">\n                <h1 className=\"leaderboard-title\">LEADERBOARD</h1>\n                <table className=\"leaderboard\">\n                    <thead>\n                        <tr>\n                            <th>Rank</th>\n                            <th>Name</th>\n                            <th>Score</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {people.map((person, index) => (\n                            <tr key={person.userId}>\n                                <td>{index + 1}</td>\n                                <td>{person.username}</td>\n                                <td>{person.score}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <div className=\"thank-you\">Thank you for playing!</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Leaderboard;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Register() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  // Handles form input changes and updates the state\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  // Handles form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Make an HTTP POST request to the backend\n      const response = await axios.post('http://localhost:5001/api/register', formData, {\n        withCredentials: true  // If using cookies for session management, include this\n      });\n      console.log('Registration successful', response.data);\n      alert('Registration successful');\n    } catch (error) {\n      console.error('Registration failed', error.response);\n      alert('Registration failed: ' + error.response.data);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </label>\n      </div>\n      <div>\n        <label>Email:\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n      </div>\n      <div>\n        <label>Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </label>\n      </div>\n      <div>\n        <button type=\"submit\">Register</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Register;\n","import { Navigate, Outlet } from 'react-router-dom';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport React from 'react';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState(null);\n  const auth = getAuth();\n\n  React.useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setIsAuthenticated(!!user);\n    });\n\n    return () => unsubscribe(); \n  }, [auth]);\n\n  if (isAuthenticated === null) {\n    return <div>Loading...</div>; \n  }\n\n  return isAuthenticated ? <Component {...rest} /> : <Navigate to=\"/\" />;\n};\n\nexport default ProtectedRoute;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\n\nconst EnterNamePage = () => {\n  const [name, setName] = useState('');\n  const { userId, username, updateUserId, updateUsername } = useAuth();\n  const navigate = useNavigate();\n\n  \n  const handleNameSubmit = () => {\n    if (name.trim()) {\n      updateUsername(name.trim());\n      navigate('/challenge');\n    }\n  };\n  useEffect(() => {\n    if (userId && username !=null) {\n      navigate('/challenge');\n    }\n  }, [userId, username, navigate]);\n\n  return (\n\n    <div class=\"containeri\">\n    <h1>Put a name to it</h1>\n    <div class=\"input-group\">\n        <input type=\"text\" placeholder=\"Type your name or nickname here\" id=\"name\" onChange={(e) => setName(e.target.value)}/>\n        <button type=\"submit\" id=\"enter-button\" onClick={handleNameSubmit}>Play</button>\n    </div>\n    </div>\n  );\n};\n\nexport default EnterNamePage;\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport Challenge from './components/Challenge';\nimport Score from './components/Score';\nimport Leaderboard from './components/Leaderboard';\nimport Register from './components/Register';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { AuthProvider } from './AuthContext';\nimport EnterNamePage from './components/EnterNamePage';\n\nconst basename = \"/jGatwaza/AuthentiQuest\";\n\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <BrowserRouter basename=\"/\">\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/challenge\" element={<ProtectedRoute component={Challenge} />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/score\" element={<Score />} />\n          <Route path=\"/leaderboard\" element={<Leaderboard />} />\n          <Route path=\"/enternamepage\" element={<EnterNamePage />} />\n        </Routes>\n      </BrowserRouter>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}